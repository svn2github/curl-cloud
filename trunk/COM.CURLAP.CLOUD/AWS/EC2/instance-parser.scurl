
{curl-file-attributes character-encoding = "utf8"}

|| Procedure to parse a running instance
|| This is used by RunInstancesResponseHandler and DescribeInstancesResponseHandler.
{define-proc package {parse-running-instance
                         instance:RunningInstance,
                         tag-stack:{Array-of String},
                         data:StringBuf,
                         name:String
                     }:void
    {switch name
     case "instanceId" do
        set instance.instance-id = {data.to-String}
     case "imageId" do
        set instance.image-id = {data.to-String}
     case "code" do
        {switch {tag-stack.top-of-stack}
         case "instanceState" do
            set instance.instance-state.code = {data.to-int}
         case "stateReason" do
            set instance.state-reason.code = {data.to-String}
        }
     case "name" do
        set instance.instance-state.name = {data.to-String}
     case "privateDnsName" do
        set instance.private-dns-name = {data.to-String}
     case "dnsName" do
        set instance.dns-name = {data.to-String}
     case "reason" do
        set instance.reason = {data.to-String}
     case "keyName" do
        set instance.key-name = {data.to-String}
     case "amiLaunchIndex" do
        set instance.ami-launch-index = {data.to-String}
     case "productCode" do
        set instance.product-codes[instance.product-codes.size - 1].product-code = {data.to-String}
     case "instanceType" do
        set instance.instance-type = {data.to-String}
     case "launchTime" do
        set instance.launch-time = {DateTime {data.to-String}}
     case "availabilityZone" do
        set instance.placement.availability-zone = {data.to-String}
     case "kernelId" do
        set instance.kernel-id = {data.to-String}
     case "ramdiskId" do
        set instance.ramdisk-id = {data.to-String}
     case "state" do
        set instance.monitoring.state = {data.to-String}
     case "privateIpAddress" do
        set instance.private-ip-address = {data.to-String}
     case "ipAddress" do
        set instance.ip-address = {data.to-String}
     case "message" do
        set instance.state-reason.message = {data.to-String}
     case "architecture" do
        set instance.architecture = {data.to-String}
     case "rootDeviceType" do
        set instance.root-device-type = {data.to-String}
     case "rootDeviceName" do
        set instance.root-device-name = {data.to-String}
     case "deviceName" do
        set instance.block-device-mapping-tail.device-name = {data.to-String}
     case "volumeId" do
        set instance.block-device-mapping-tail.ebs.volume-id = {data.to-String}
     case "status" do
        set instance.block-device-mapping-tail.ebs.status = {data.to-String}
     case "attachTime" do
        set instance.block-device-mapping-tail.ebs.attach-time = {DateTime {data.to-String}}
     case "deleteOnTermination" do
        {if {data.to-String} == "true" then
            set instance.block-device-mapping-tail.ebs.delete-on-termination = true
         else
            set instance.block-device-mapping-tail.ebs.delete-on-termination = false
        }
     case "instanceLifecycle" do
        set instance.instance-life-cycle = {data.to-String}
     case "spotInstanceRequestId" do
        set instance.spot-instance-request-id = {data.to-String}
     case "virtualizationType" do
        set instance.virtualization-type = {data.to-String}
     case "platform" do
        set instance.platform = {data.to-String}
     case "subnetId" do
        set instance.subnet-id = {data.to-String}
     case "vpcId" do
        set instance.vpc-id = {data.to-String}
    }
}
